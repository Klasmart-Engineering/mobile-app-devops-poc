name: "merge-build"
on:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:
    branches:
      - develop
      - feature/setup

jobs:
  build:
    name: build
    runs-on: macos-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Checkout latest code
        uses: actions/checkout@v3
        # with:
        #   persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        #   fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17.x'
      - run: npm install
      - run: (cd ios && pod install)
      - name: Run test
        run: npm test

      - name: Build Android
        run: (cd android && ./gradlew assembleRelease)
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: android-artifact.apk
          path: android/app/build/outputs/apk/release/app-release.apk
      
      # - name: Build iOS
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_ADHOC_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_ADHOC_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - run: (cd ios && fastlane beta) 
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: MobileDevops.ipa
          path: ios/MobileDevops.ipa
      # - run: git status
      # - run: git reset --hard
      # - run: git status
      # - name: Commit files
      #   run: |
      #     git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git config --local user.name "github-actions[bot]"
      # - run: npm version patch -m "[skip ci] Update next app version number"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.RIHAN_GITHUB_TOKEN }}
      #     branch: ${{ github.ref }}
  upload:
    name: Build and upload
    needs: build
    runs-on: ubuntu-latest
    # if: ${{ false }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: android-artifact.apk
      - uses: actions/download-artifact@v2
        with:
          name: MobileDevops.ipa
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: qa
          file: app-release.apk
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID_IOS}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: qa
          file: MobileDevops.ipa